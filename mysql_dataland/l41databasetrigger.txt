=>Database Trigger

=Syntax

CREATE TRIGGER triggername
trigger_time triggent_event ON tablename FOR EACH ROW
BEGIN
	-- statements
END


=>trigger_time
BEFORE
AFTER


=>trigger_event
INSERT 
UPDATE
DELETE

_______________________________________________________________________


CREATE TABLE IF NOT EXISTS borrowers(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
username VARCHAR(50),
password VARCHAR(255),
age INT,
status INT DEFAULT 1
);


DESC borrowers;

1 18 45
2 < 18
3 > 45


INSERT INTO borrowers(username, password, age)
VALUES('aungaung', MD5(SHA1('12345')), 18),
('zawzaw', MD5(SHA1('12345')), 30);

SELECT * FROM borrowers;

________________________

=>IF Statement

IF condition1 THEN
	----- statements to execute
END IF;


IF condition1 THEN
	----- stataments to execute
ELSE
	----- stataments to execute	
END IF; 

----------------

IF condition1 THEN
	----- stataments to execute
ELSEIF condition2 THEN
	----- statements to execute
ELSEIF condition3 THEN
	----- statements to execute
ELSE
	----- stataments to execute	
END IF;

________________________

=>BEFORE INSERT

DELIMITER // DELIMITER | DELIMITER $$

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age < 18 THEN SET NEW.status = 2;
	END IF;
END;//

DELIMITER ;



DELIMITER |

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age < 18 THEN SET NEW.status = 2;
	END IF;
END;|

DELIMITER ;



DELIMITER $$

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age < 18 THEN SET NEW.status = 2;
	END IF;
END;$$

DELIMITER ;



SHOW TRIGGERS;
SHOW TRIGGERS LIKE 'borrower%';
SHOW TRIGGERS LIKE 'borrower%'\G;


INSERT INTO borrowers(username, password, age)
VALUES('hninhnin', MD5(SHA1(12345)), 16);

SELECT * FROM borrowers;

INSERT INTO borrowers(username, password, age)
VALUES('thida', MD5(SHA1(12345)), 35);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;

INSERT INTO borrowers(username, password, age)
VALUES('june', MD5(SHA1(12345)),14);

SELECT * FROM borrowers;

________________________


DELIMITER |

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age < 18 THEN SET NEW.status = 2;
	ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
	END IF;
END;|

DELIMITER ;


SELECT * FROM borrowers;


INSERT INTO borrowers(username, password, age)
VALUES('yamin', MD5(SHA1(12345)), 50);

SELECT * FROM borrowers;

INSERT INTO borrowers(username, password, age)
VALUES('tuntun', MD5(SHA1(12345)), 28);

SELECT * FROM borrowers;

INSERT INTO borrowers(username, password, age)
VALUES('april', MD5(SHA1(12345)),12);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;
________________________

=>MySQL ERRORS

A numeric error code(1146)
SQLSTATE value('42502') . string / 5 characters
Message String - description of the error
________________________


DELIMITER $$

CREATE TRIGGER borrowerrestrict_bfc
BEFORE INSERT ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age < 18 THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = "Ohh...we cannot provide loan for this user";
	END IF;
END; $$
DELIMITER ;

SELECT * FROM borrowers;


INSERT INTO borrowers(username, password, age)
VALUES('susu', MD5(SHA1(12345)), 35);

SELECT * FROM borrowers;

*error with message 45000
INSERT INTO borrowers(username, password, age)
VALUES('yuyu', MD5(SHA1(12345)), 16);

SELECT * FROM borrowers;

INSERT INTO borrowers(username, password, age)
VALUES('kyawkyaw', MD5(SHA1(12345)), 55);

SELECT * FROM borrowers;


DROP TRIGGER IF EXISTS borrowerrestrict_bfc;

_______________________________________________________________________

=>AFTER INSERT

CREATE TABLE IF NOT EXISTS borrowercreators(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
borrower_id INT,
created_at TIMESTAMP DEFAULT NOW(),
created_by VARCHAR(50)
);

DESC borrowercreators;



DELIMITER //

CREATE TRIGGER borrowercreators_afc
AFTER INSERT
ON borrowers FOR EACH ROW
BEGIN
	DECLARE dbuser VARCHAR(50);
	SELECT USER() INTO dbuser;

	INSERT INTO borrowercreators(borrower_id,created_by)
	VALUES(NEW.id,dbuser);

END;//

DELIMITER ;


INSERT INTO borrowers(username,password,age)
VALUES('yuyu',MD5(SHA1(12345)),23);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

INSERT INTO borrowers(username,password,age)
VALUES('myamya',MD5(SHA1(12345)),50);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;




id
borrower_id
created_at
created_by

________________________

CREATE TABLE IF NOT EXISTS reminders(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
borrower_id INT,
message VARCHAR(255) NOT NULL
);


DESC reminders;


DELIMITER //

CREATE TRIGGER borroweragereminder_afc
AFTER INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age IS NULL THEN
		INSERT INTO reminders(borrower_id, message)
		VALUES(NEW.id,CONCAT('Dear ',NEW.username,', please update your age.'));
	END IF;

END; //

DELIMITER ;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;


INSERT INTO borrowers(username, password)
VALUES('thura', MD5(SHA1(12345)));


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;


INSERT INTO borrowers(username, password,age)
VALUES('myomyo', MD5(SHA1(12345)),14);


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;



INSERT INTO borrowers(username, password)
VALUES('naungnaung', MD5(SHA1(12345)));


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;





id 
borrower_id
message

________________________

=>BEFORE UPDATE

DELIMITER |


CREATE TRIGGER borrowerage_bfu
BEFORE UPDATE
ON borrowers FOR EACH ROW
BEGIN
	DECLARE errmessage VARCHAR(255);
	SET errmessage = CONCAT('The of age is ', OLD.age, '. Sorry, we cannot provide to change. ');

	IF OLD.age IS NOT NULL THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = errmessage;
	ELSE
		IF NEW.age < 18 THEN SET NEW.status = 2;
		ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
		END IF;
	END IF;
END; |


DELIMITER ;




SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;



*error with message 45000
UPDATE borrowers SET age = 40 WHERE id = 1;


UPDATE borrowers SET age = 30 WHERE id = 16;
UPDATE borrowers SET age = 10 WHERE id = 17;
UPDATE borrowers SET age = 50 WHERE id = 18;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;


INSERT INTO borrowers(username, password)
VALUES('thiri', MD5(SHA1(12345))),
('kyalsin', MD5(SHA1(12345))),
('kotha', MD5(SHA1(12345)));



________________________

=>AFTER UPDATE

DELIMITER $$

CREATE TRIGGER borrowerreminder_afu
AFTER UPDATE
ON borrowers FOR EACH ROW
BEGIN
	DELETE FROM reminders WHERE borrower_id = NEW.id;
END; $$

DELIMITER ;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;


*error with message 45000
UPDATE borrowers SET age = 40 WHERE id = 2;


UPDATE borrowers SET age = 30 WHERE id = 18;
UPDATE borrowers SET age = 15 WHERE id = 19;
UPDATE borrowers SET age = 50 WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;
________________________

=>BEFORE DELETE

CREATE TABLE IF NOT EXISTS activities(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
borrower_id INT,
created_at TIMESTAMP DEFAULT NOW(),
created_by VARCHAR(50)
);

DESC activities;

DELIMITER $$

CREATE TRIGGER borroweracti_bfd
BEFORE DELETE
ON borrowers FOR EACH ROW
BEGIN
	DECLARE dbuser VARCHAR(50);
	SELECT USER() INTO dbuser;

	INSERT INTO activities(borrower_id, created_by)
	VALUES(OLD.id, dbuser);
END;$$

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 18;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;




activities
id
borrower_id
created_at
created_by

________________________

=>AFTER DELETE

DELIMITER //

CREATE TRIGGER borroweracti_afd
AFTER DELETE
ON borrowers FOR EACH ROW
BEGIN
	
	DELETE FROM borrowercreators WHERE borrower_id = OLD.id;

END;//

DELIMITER ;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;


DELETE FROM borrowers WHERE id = 19;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;


DELETE FROM borrowers WHERE id = 16;
DELETE FROM borrowers WHERE id = 17;
DELETE FROM borrowers WHERE id = 21;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

_______________________________________________________________________















if(){
	
}


if(){
	
}else{
	
}


if(){
	
}










users Table
name
email
password
age
status df 1


aungaung 		aungaung@gmail.com		12345 		20  	1
zawzaw 			zawzaw@gmail.com		12345 		18  	1
maungmaung 		maungmaung@gmail.com	12345 		14  	1
susu 			susu@gmail.com			12345 		35  	1



if(age < 18){
	db status = 0
}else{
	db status = 1
}











Product Table
1 	JAN 	2021

1 	Redbull		500
2 	Sponsor		400
___________

1 	JAN 	2022

1 	Redbull		1000


Sales Table

id 	invdate 		product_id	 qty   price 	casheir_id   member_id
1 	10 jan 2021			1 		  1 	500 	1001		 NULL
1 	20 june 2021		1 		  1 	500 	1001		 NULL
1 	31 dec 2021			1 		  1 	500 	1001		 NULL
1 	10 oct 2021			1 		  1 	1000 	1001		 NULL
1 	20 nov 2021			1 		  1 	1000 	1001		 NULL



Pdpricehistories Table
id 
product_id
oldprice
newprice
updated_by




6MTG

